name: Request Deployment

outputs:
  sha:
    value: ""
  merged_sha:
    value: ""
  base_sha: 
    value: ""
    
runs:
  using: "composite"
  steps:
    - name: Request Deployment
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.ACTIVE_TOKEN}}
        script: |
            const delay = ms => new Promise(resolve => setTimeout(resolve, ms));
            
            async function getPullRequestHeadCommit (pr) {           
              if (!pr)
                throw new Error('Failed to retrieve the PR information');
              
              for (let i = 0; i < 30 && pr.mergeable === null; i++) {
                console.log('Waiting for the merge commit...');
                
                await delay(3000);
                                
                (
                  { data: pr } = await github.pulls.get({
                    owner: pr.base.repo.owner.login,
                    repo: pr.base.repo.name,
                    pull_number: pr.number
                  })
                );
              }
              
              if (!pr.mergeable)
                throw new Error('PR cannot be merged');
              
              const sha = pr.head.sha;
              return { sha, merged_sha: pr.merge_commit_sha, base_sha: pr.base.sha };
            }
            
            async function getTargetCommit(context) {
              if (context.eventName === 'push' && context.payload.head_commit)
                return { sha: context.payload.after, base_sha: context.payload.before };
              
              if (context.eventName === 'pull_request_target')
                return getPullRequestHeadCommit(context.payload.pull_request);
              
              throw new Error('Failed to detect a target commit');
            }
            
            const inputs = await getTargetCommit(context);
            
            await github.actions.createWorkflowDispatch({
              ref: 'master',
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-to-artifacts.yml',
              inputs
            });